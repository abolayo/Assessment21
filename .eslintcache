[{"C:\\Users\\Med's PC\\assessment\\src\\index.js":"1","C:\\Users\\Med's PC\\assessment\\src\\reportWebVitals.js":"2","C:\\Users\\Med's PC\\assessment\\src\\App.js":"3","C:\\Users\\Med's PC\\assessment\\src\\components\\form.jsx":"4","C:\\Users\\Med's PC\\assessment\\src\\components\\NavBarPage.js":"5","C:\\Users\\Med's PC\\assessment\\src\\components\\Cards.jsx":"6","C:\\Users\\Med's PC\\assessment\\src\\components\\footer.jsx":"7","C:\\Users\\Med's PC\\assessment\\src\\components\\social.jsx":"8","C:\\Users\\Med's PC\\assessment\\src\\components\\CardTwo.jsx":"9","C:\\Users\\Med's PC\\assessment\\src\\Pages\\Cart.jsx":"10"},{"size":922,"mtime":1628450610266,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":559,"mtime":1628416038567,"results":"14","hashOfConfig":"12"},{"size":942,"mtime":1628371023633,"results":"15","hashOfConfig":"12"},{"size":923,"mtime":1631017391574,"results":"16","hashOfConfig":"12"},{"size":1708,"mtime":1631017128492,"results":"17","hashOfConfig":"12"},{"size":507,"mtime":1628377123913,"results":"18","hashOfConfig":"12"},{"size":1039,"mtime":1628377421508,"results":"19","hashOfConfig":"12"},{"size":1592,"mtime":1631027184388,"results":"20","hashOfConfig":"12"},{"size":7473,"mtime":1628453460710,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"thgdpo",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"C:\\Users\\Med's PC\\assessment\\src\\index.js",[],["44","45"],"C:\\Users\\Med's PC\\assessment\\src\\reportWebVitals.js",[],"C:\\Users\\Med's PC\\assessment\\src\\App.js",[],"C:\\Users\\Med's PC\\assessment\\src\\components\\form.jsx",[],"C:\\Users\\Med's PC\\assessment\\src\\components\\NavBarPage.js",[],"C:\\Users\\Med's PC\\assessment\\src\\components\\Cards.jsx",[],"C:\\Users\\Med's PC\\assessment\\src\\components\\footer.jsx",[],"C:\\Users\\Med's PC\\assessment\\src\\components\\social.jsx",[],"C:\\Users\\Med's PC\\assessment\\src\\components\\CardTwo.jsx",[],"C:\\Users\\Med's PC\\assessment\\src\\Pages\\Cart.jsx",["46","47"],"import React from \"react\";\r\nimport kfc from \"../images/fast-food.svg\";\r\nimport refuel from \"../images/vegetables_drinks.svg\";\r\nimport max from \"../images/resturant.svg\";\r\nimport bike from \"../images/drinks_cocktails.svg\";\r\nimport \"../styles/cart.css\";\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\n\r\n  const goods = [\r\n    {\r\n      id: 1,\r\n      image: kfc,\r\n      type: \"KFC- King Bucket\",\r\n      price: 4000,\r\n      quantity: 1\r\n    },\r\n    {\r\n      id: 2,\r\n      image: refuel,\r\n      type: \"Refuel Max\",\r\n      price: 1000,\r\n      quantity: 1\r\n    },\r\n    {\r\n      id: 3,\r\n      image: max,\r\n      type: \"Refuel Max\",\r\n      price: 1500,\r\n      quantity: 1\r\n    },\r\n    {\r\n      id: 4,\r\n      image: bike,\r\n      type: \"Delivery fee\",\r\n      price: 1200,\r\n    },\r\n  ];\r\n\r\n  function Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n          <h1>{goods.type}</h1>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  Header.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n    \r\n  };\r\n  \r\n  function Goods(props) {\r\n    const goods = [\r\n      {\r\n        id: 1,\r\n        image: kfc,\r\n        type: \"KFC- King Bucket\",\r\n        price: 4000,\r\n        quantity: 1\r\n      },\r\n      {\r\n        id: 2,\r\n        image: refuel,\r\n        type: \"Refuel Max\",\r\n        price: 1000,\r\n        quantity: 1\r\n      },\r\n      {\r\n        id: 3,\r\n        image: max,\r\n        type: \"Refuel Max\",\r\n        price: 1500,\r\n        quantity: 1\r\n      },\r\n      {\r\n        id: 4,\r\n        image: bike,\r\n        type: \"Delivery fee\",\r\n        price: 1200,\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"product\" key={goods.id}>\r\n        <Row xs={1} md={3} className=\"gcards\">\r\n        {goods.map((good) => (\r\n        <Col xs={12} md={6} xl={3}>\r\n        <img className=\"product-image\" src={goods.image} alt=\" hello\"/>\r\n        <div className=\"product-qty\">\r\n          <Qty \r\n            quantity={good.quantity} \r\n            onChange={good.onQtyChange} \r\n          />\r\n        </div>\r\n        <p className=\"product-title\">\r\n          <span>{goods.title}</span>\r\n        </p>\r\n        <p className=\"product-price\">#{goods.price}</p>\r\n      </Col>\r\n      ))}\r\n    </Row>\r\n  </div>\r\n);\r\n}\r\n     \r\nGoods.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n    onQtyChange:PropTypes.func.isRequired\r\n  };\r\n \r\n  function Qty(props) {\r\n    return (\r\n      <div className=\"qty\">\r\n        <button \r\n          className=\"qty-button plus\"\r\n          onClick={() => goods.onChange(+1)}\r\n        >\r\n          +\r\n        </button>\r\n        <div className=\"qty-num\">{props.quantity}</div>\r\n        <button \r\n          onClick={() => goods.onChange(-1)}\r\n          className=\"qty-button mius\"\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  Qty.propTypes = {\r\n    quantity: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n  };\r\n  \r\n  class GiftWrap extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"gift-wrap\">\r\n          <input \r\n            onChange={this.props.onAdd}\r\n            checked={this.props.wrap}\r\n            id=\"checkbox\"\r\n            type=\"checkbox\" />\r\n          <label htmlFor=\"checkbox\">\r\n            {this.props.label}\r\n          </label>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  class Footer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        elapsedTime: 0,\r\n      };\r\n    }\r\n    \r\n   componentDidMount() {\r\n      const deadline = Date.now() + this.props.expires * 1000;\r\n      \r\n      this.interval = setInterval(() => {\r\n        this.setState((prevState, props) => ({\r\n          elapsedTime: deadline - Date.now()\r\n        }));\r\n      }, 100);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n    \r\n    render() {\r\n      let subtotal = this.props.products.reduce((total, product) => {\r\n        return total + product.price * product.quantity\r\n      }, 0);\r\n      \r\n      let seconds = Math.floor(this.state.elapsedTime / 1000);\r\n      \r\n      return (\r\n        <div className=\"footer\">\r\n          <h2>Subtotal: ${subtotal}</h2>\r\n          <h3>Expires in: {seconds}s</h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  Footer.propTypes = {\r\n    products: PropTypes.array.isRequired,\r\n    expires: PropTypes.number.isRequired\r\n  };\r\n  \r\n  function Button(props) {\r\n    return (\r\n      <button className=\"expand\">{props.text}</button>\r\n    );\r\n  }\r\n  \r\n  Button.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n  };\r\n  \r\n  class Application extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        products: props.products,\r\n        wrap: false\r\n      };\r\n    }\r\n    \r\n    onQtyChange(qty, key) {\r\n      this.setState((prevState, props) => {\r\n        let product = prevState.products.find(p => p.id === key);\r\n        \r\n        product.quantity += qty;\r\n        \r\n        if (product.quantity === 0) {\r\n          let index = prevState.products.indexOf(product);\r\n          prevState.products.splice(index, 1);\r\n          \r\n          let state = {\r\n            products: prevState.products\r\n          };\r\n          \r\n          if (product.id === props.giftwrap.id) {\r\n            state.wrap = false;\r\n          }\r\n          \r\n          return state;\r\n        }\r\n        \r\n        return {\r\n          products: prevState.products\r\n        };\r\n      });\r\n    }\r\n    \r\n   onGiftWrap(product) {\r\n      this.setState((prevState, props) => {\r\n        if (!prevState.wrap) {\r\n          prevState.products.push({\r\n            id: props.giftwrap.id,\r\n            title: props.giftwrap.title,\r\n            price: props.giftwrap.price,\r\n            image: props.giftwrap.image,\r\n            quantity: 1\r\n          });\r\n          \r\n          return {\r\n            products: prevState.products,\r\n            wrap: true\r\n          };\r\n        }\r\n        \r\n        let index = prevState.products.indexOf(props.giftwrap);\r\n        prevState.products.splice(index, 1);\r\n          \r\n        return {\r\n          products: prevState.products,\r\n          wrap: false\r\n        };\r\n      });\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <div className=\"application\">\r\n          <Header title={this.props.title} />\r\n          <div className=\"products\">\r\n            {this.state.products.map(product => (\r\n              <Goods \r\n                title={product.title}\r\n                image={product.image}\r\n                price={product.price}\r\n                quantity={product.quantity}\r\n                key={product.id}\r\n                onQtyChange={qty => this.onQtyChange(qty, product.id)}\r\n              />\r\n            ))}\r\n          </div>\r\n          <Button text=\"Checkout\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  Application.propTypes = {\r\n    title: PropTypes.string,\r\n    products: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      image: PropTypes.string.isRequired,\r\n      quantity:PropTypes.number.isRequired\r\n    })),\r\n    giftwrap: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      image: PropTypes.string.isRequired\r\n    })\r\n  };\r\n  \r\n  Application.defaultProps = {\r\n    title: 'Shopping Cart'\r\n  };\r\n  export default Goods;\r\n ",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":8,"column":20,"nodeType":"54","messageId":"55","endLine":8,"endColumn":24},{"ruleId":"52","severity":1,"message":"56","line":139,"column":9,"nodeType":"54","messageId":"55","endLine":139,"endColumn":17},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'GiftWrap' is defined but never used.","no-global-assign","no-unsafe-negation"]